{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/crud-backend.service.ts","webpack:///src/app/models/column.model.ts","webpack:///src/app/models/description.model.ts","webpack:///src/app/pages/main-view/main-view.component.ts","webpack:///src/app/pages/main-view/main-view.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CrudBackendService","http","boardUpdated","boards","history","columnUpdateTask","col","post","subscribe","responseData","console","log","message","push","_id","put","taskNameToBeUpdated","colIdUserClickedOn","taskId","colId","item","get","asObservable","providedIn","Column","name","columns","Description","taskName","desc","MainViewComponent","crudBackend","ngZone","voiceActiveSectionDisabled","voiceActiveSectionDisabledTask","voiceActiveSectionError","voiceActiveSectionSuccess","voiceActiveSectionListening","voiceActiveSectionTasksDisabled","voiceActiveSectionTasksDisabledTask","voiceActiveSectionTasksError","voiceActiveSectionTasksSuccess","voiceActiveSectionTasksListening","isModalActive","itemSeleted","column","annyang","addCallback","err","error","voiceText","abort","run","undefined","res","userSaid","queryText","onCreateNewColumnVoice","closeVoiceRecognition","commands","addCommands","initializeVoiceRecognitionCallback","start","autoRestart","getColumnName","voiceTextTask","initializeVoiceRecognitionCallbackTask","onCreateNewTaskVoice","getBoardData","getBoard","data","i","Object","length","len","columnName","taskLength","description","a","leng","prompt","makeid","newColumn","alert","taskname","find","Date","now","pop","newTask","voiceTaskName","getTasks","conf","confirm","splice","deleteColumn","getBoardName","gettaskName","items","onClickTaskColid","onClickTaskItem","itemFromColumn","clearEveryThing","editName","editTask","deleteTask","event","container","previousIndex","currentIndex","previousContainer","result","characters","charactersLength","charAt","Math","floor","random","toString","onCreateNewColumn","onClearEveryThing","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainViewComponent } from './pages/main-view/main-view.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'', component:MainViewComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'kanbanClone';\r\n}\r\n","<router-outlet>\r\n\r\n</router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainViewComponent } from './pages/main-view/main-view.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainViewComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    DragDropModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, ɵCompiler_compileModuleSync__POST_R3__ } from '@angular/core';\r\nimport{HttpClient} from \"@angular/common/http\";\r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport{map} from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { Column } from './models/column.model';\r\nimport { Description } from './models/description.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudBackendService {\r\n  \r\n  private boardUpdated = new Subject<Column[]>();\r\n  boards: Array<Column> =[];\r\n  history: Array<any>  =[];\r\n  columnUpdateTask: Column = new Column(\"\",\"\",[]);\r\n  constructor(private http: HttpClient) { }\r\n  \r\n\r\nnewColumn(col: Column){\r\nthis.http.post<{message:string, postId:string}>('http://localhost:3000/api/boards',col).subscribe((responseData)=>{\r\n        console.log(responseData.message);\r\n  });\r\nthis.boards.push(col);\r\n}\r\n\r\ndeleteColumn(_id: any) {\r\n  this.http.delete<{message:string}>(\"http://localhost:3000/api/boards/\" + _id).subscribe((responseData)=>{\r\n      console.log(responseData.message);\r\n    });\r\n    \r\n}\r\n\r\nnewTask(col: Column) {\r\n        this.http.put<{message:string, postId:string}>('http://localhost:3000/api/boards',col)\r\n             .subscribe((responseData)=>{\r\n            console.log(responseData.message);\r\n\r\n});\r\n}\r\neditTask(taskNameToBeUpdated: any, colIdUserClickedOn: any) {\r\n  console.log(taskNameToBeUpdated);\r\n  \r\n  this.http.delete('http://localhost:3000/api/boards/edit/' + colIdUserClickedOn/taskNameToBeUpdated)\r\n  .subscribe((responseData)=>{\r\n    \r\n  });\r\n}\r\nclearEveryThing() {\r\n  this.http.delete<{message:string}>(\"http://localhost:3000/api/boards/clearEveryThing/All/E\").subscribe((responseData)=>{\r\n    console.log(responseData.message);\r\n  })\r\n}\r\ndeleteTask(taskId: any, colId: any, item:any) {\r\n  this.http.delete<{message:string}>(\"http://localhost:3000/api/boards/\" + colId +\"/\"+item).subscribe((responseData)=>{\r\n    console.log(responseData.message);\r\n  });\r\n}\r\n\r\ngetBoard(){\r\n  return this.http.get<{message:string, boards:any}>('http://localhost:3000/api/boards');\r\n}\r\n\r\n\r\n\r\ngetBoardUpdateListener(){\r\n  return this.boardUpdated.asObservable();\r\n  }\r\n\r\n}\r\n","import { Description } from './description.model';\r\n\r\nexport class Column{\r\n    constructor(public _id: string, public name:string, public columns:Description[]){}\r\n}","export class Description{\r\n    constructor(public _id: string, public taskName:string , public desc:string, public history:string[]){}\r\n}","import { Component, OnInit, NgZone} from '@angular/core';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport { Column } from 'src/app/models/column.model';\r\nimport { Description } from 'src/app/models/description.model';\r\nimport{ CrudBackendService } from '../../crud-backend.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\ndeclare const annyang: any;\r\n@Component({\r\n  selector: 'app-main-view',\r\n  templateUrl: './main-view.component.html',\r\n  styleUrls: ['./main-view.component.scss'],\r\n})\r\nexport class MainViewComponent implements OnInit {\r\n  \r\n  voiceActiveSectionDisabled: boolean = true;\r\n  voiceActiveSectionDisabledTask: boolean = true;\r\n  voiceActiveSectionError: boolean = false;\r\n  voiceActiveSectionSuccess: boolean = false;\r\n  voiceActiveSectionListening: boolean = false;\r\n  voiceActiveSectionTasksDisabled: boolean = true;\r\n  voiceActiveSectionTasksDisabledTask: boolean = true;\r\n  voiceActiveSectionTasksError: boolean = false;\r\n  voiceActiveSectionTasksSuccess: boolean = false;\r\n  voiceActiveSectionTasksListening: boolean = false;\r\n  voiceText: string;\r\n  voiceTextTask: string;\r\n  isModalActive: boolean = false;\r\n  itemSeleted: String =\"\";\r\n  itemFromColumn: any;\r\n  column:Column[]=[];\r\n  history:string[]=[];\r\n  boardSub: Subscription\r\n  value: String;\r\n  message = '';\r\n  onClickTaskColid: any;\r\n  onClickTaskItem: any;\r\n  col: any;\r\n  desc: Array<Description> =[];\r\n  constructor(public crudBackend: CrudBackendService, private ngZone: NgZone) { }\r\n\r\n  initializeVoiceRecognitionCallback(): void {\r\n    annyang.addCallback('error', (err) => {\r\n      if(err.error === 'network'){\r\n        this.voiceText = \"Internet is require\";\r\n        annyang.abort();\r\n        this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\r\n      } else if (this.voiceText === undefined) {\r\n        this.ngZone.run(() => this.voiceActiveSectionError = true);\r\n        annyang.abort();\r\n      }\r\n    });\r\n   annyang.addCallback('soundstart', (res) => {\r\n    this.ngZone.run(() => this.voiceActiveSectionListening = true);\r\n   });\r\n   annyang.addCallback('end', () => {\r\n     if (this.voiceText === undefined) {\r\n       this.ngZone.run(() => this.voiceActiveSectionError = true);\r\n       annyang.abort();\r\n     }\r\n   });\r\n   annyang.addCallback('result', (userSaid) => {\r\n     this.ngZone.run(() => this.voiceActiveSectionError = false);\r\n     let queryText: any = userSaid[0];\r\n     annyang.abort();\r\n     this.voiceText = queryText;\r\n     this.ngZone.run(() => this.voiceActiveSectionListening = false);\r\n     this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\r\n     if(this.voiceText !=null && this.voiceText !=\"\"){\r\n      this.onCreateNewColumnVoice();\r\n      annyang.abort();\r\n     }\r\n     this.closeVoiceRecognition()\r\n   });\r\n   \r\n }\r\n startVoiceRecognitionColumn(): void {\r\n   this.voiceActiveSectionDisabled = false;\r\n   this.voiceActiveSectionError = false;\r\n   this.voiceActiveSectionSuccess = false;\r\n   this.voiceText = undefined;\r\n   if (annyang) {\r\n     let commands = {\r\n       'demo-annyang': () => { }\r\n     };\r\n     annyang.addCommands(commands);\r\n    \r\n     this.initializeVoiceRecognitionCallback();\r\n     annyang.start({ autoRestart: false });\r\n     \r\n   }\r\n }\r\n startVoiceRecognitionTask(id:any, getColumnName: any){\r\n  this.voiceActiveSectionTasksDisabled = false;\r\n  this.voiceActiveSectionTasksError = false;\r\n  this.voiceActiveSectionTasksSuccess = false;\r\n  this.voiceTextTask = undefined;\r\n  if (annyang) {\r\n    let commands = {\r\n      'demo-annyang': () => { }\r\n    };\r\n    annyang.addCommands(commands);\r\n   \r\n    this.initializeVoiceRecognitionCallbackTask(id, getColumnName);\r\n    annyang.start({ autoRestart: false });\r\n    \r\n  }\r\n }\r\n initializeVoiceRecognitionCallbackTask(id: any, getColumnName: any): void {\r\n  annyang.addCallback('error', (err) => {\r\n    if(err.error === 'network'){\r\n      this.voiceTextTask = \"Internet is require\";\r\n      annyang.abort();\r\n      this.ngZone.run(() => this.voiceActiveSectionTasksSuccess = true);\r\n    } else if (this.voiceTextTask === undefined) {\r\n      this.ngZone.run(() => this.voiceActiveSectionTasksError = true);\r\n      annyang.abort();\r\n    }\r\n  });\r\n annyang.addCallback('soundstart', (res) => {\r\n  this.ngZone.run(() => this.voiceActiveSectionTasksListening = true);\r\n });\r\n annyang.addCallback('end', () => {\r\n   if (this.voiceTextTask === undefined) {\r\n     this.ngZone.run(() => this.voiceActiveSectionTasksError = true);\r\n     annyang.abort();\r\n   }\r\n });\r\n annyang.addCallback('result', (userSaid) => {\r\n   this.ngZone.run(() => this.voiceActiveSectionTasksError = false);\r\n   let queryText: any = userSaid[0];\r\n   annyang.abort();\r\n   this.voiceTextTask = queryText;\r\n   this.ngZone.run(() => this.voiceActiveSectionTasksListening = false);\r\n   this.ngZone.run(() => this.voiceActiveSectionTasksSuccess = true);\r\n   if(this.voiceText !=null && this.voiceText !=\"\"){\r\n    this.onCreateNewTaskVoice(id, getColumnName, this.voiceTextTask);\r\n    annyang.abort();\r\n   }\r\n   this.closeVoiceRecognition()\r\n });\r\n \r\n}\r\n closeVoiceRecognition(): void {\r\n   this.voiceActiveSectionDisabled = true;\r\n   this.voiceActiveSectionError = false;\r\n   this.voiceActiveSectionSuccess = false;\r\n   this.voiceActiveSectionListening = false;\r\n   this.voiceText = undefined;\r\n   if(annyang){\r\n    annyang.abort();\r\n   }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getBoardData();\r\n  }\r\n  getBoardData(){\r\n    this.crudBackend.getBoard().subscribe((data)=>{\r\n      const col = data[\"boards\"]\r\n      for(let i =0; i<=Object.keys(col).length -1; i++){\r\n        const len = col[i]\r\n        const _id = len['_id'];\r\n        const columnName = len['name'];\r\n        const taskLength = len['columns'];\r\n        const description:Array<Description> =[];\r\n        for(let a=0; a<=Object.keys(taskLength).length -1; a++){\r\n           const leng = taskLength[a];\r\n           const taskId = leng['_id'];\r\n           const desc = leng['desc'];\r\n           const history = leng['history'];\r\n           const taskName = leng['taskName'];\r\n           if(taskName != null && taskName !=\"\"){\r\n            description.push(new Description(taskId,taskName, desc, history))\r\n           }\r\n           \r\n        }\r\n        this.column.push(new Column(_id, columnName, description));\r\n\r\n      } \r\n  \r\n      \r\n    });\r\n    \r\n  }\r\n  onCreateNewColumn(){\r\n    var columnName = prompt(\"Please enter the name of the column\", \"New Column\");\r\n    if(columnName != null && columnName !=\"\"){\r\n      var col = new Column(this.makeid(9),columnName, [])\r\n      this.column.push(col);\r\n      this.crudBackend.newColumn(col);\r\n    }\r\n    else{\r\n      alert(\"Column name can not be empty\");\r\n    }\r\n    \r\n    \r\n  }\r\n  onCreateNewColumnVoice(){\r\n    var col = new Column(this.makeid(9),this.voiceText, [])\r\n    this.column.push(col);\r\n    this.crudBackend.newColumn(col);\r\n    \r\n  }\r\n  onCreateNewTask(id:any, getColumnName: any){\r\n\r\n    var taskname = prompt(\"Please enter the name of the task\", \"New Task\");\r\n    if(taskname !=null && taskname !=\"\"){\r\n    this.column.find((data)=>{\r\n      this.history.push(\"New Task Created on: \"+ Date.now())\r\n      data.columns.push(new Description(this.makeid(9),taskname,\"\", this.history));\r\n        if(data.name != getColumnName){\r\n            data.columns.pop();\r\n      }\r\n      const col = new Column(id, getColumnName, data.columns);\r\n      this.crudBackend.newTask(col);\r\n      })\r\n    }\r\n  }\r\n  onCreateNewTaskVoice(id:any, getColumnName: any, voiceTaskName:any){\r\n\r\n    if(voiceTaskName !=null && voiceTaskName !=\"\"){\r\n    this.column.find((data)=>{\r\n      this.history.push(\"New Task Created on: \"+ Date.now())\r\n      data.columns.push(new Description(this.makeid(9),voiceTaskName,\"\", this.history));\r\n        if(data.name != getColumnName){\r\n            data.columns.pop();\r\n      }\r\n      const col = new Column(id, getColumnName, data.columns);\r\n      this.crudBackend.newTask(col);\r\n      })\r\n    }\r\n  }\r\n  onDeleteColumn(id:any, getColumnName:any, getTasks:any){\r\n    const conf = confirm('Are you sure you want to delete this column?');\r\n    if(conf == true){\r\n    for(var i = this.column.length - 1; i >= 0; i--) {\r\n      if(this.column[i].name === getColumnName) {\r\n        this.column.splice(i, 1);\r\n      }\r\n  }\r\n    this.crudBackend.deleteColumn(id);\r\n}\r\n  }\r\n  onEditBoardName(){\r\n     var getBoardName = prompt(\"Please enter the board Name\", \"New Board\");\r\n      \r\n  }\r\n  descriptionMethod(description,gettaskName){\r\n    this.column.find((data)=>{\r\n      for(var i = data.columns.length - 1; i >= 0; i--) {\r\n        if(data.columns[i].taskName === gettaskName) {\r\n          data.columns[i].desc = description;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  toggleModal(id, items, getColumnName) {\r\n    console.log(items);\r\n   this.onClickTaskColid =id;\r\n   this.onClickTaskItem = items;\r\n   \r\n    console.log(this.itemSeleted);\r\n    this.itemSeleted = items;\r\n    this.itemFromColumn = getColumnName;\r\n    this.isModalActive = !this.isModalActive;\r\n   \r\n  }\r\n  onClearEveryThing(){\r\n    const conf = confirm('Are you sure you want to delete everything and start fresh?');\r\n    if(conf == true){\r\n    this.column = [];\r\n    this.crudBackend.clearEveryThing();\r\n    }\r\n  }\r\n  editTaskName(gettaskName: any){\r\n    console.log(this.onClickTaskColid)\r\n    console.log(this.onClickTaskItem)\r\n    var editName = prompt(\"Please enter the new taskName\", \"New Task Name\");\r\n    this.column.find((data)=>{\r\n      for(var i = data.columns.length - 1; i >= 0; i--) {\r\n        if(data.columns[i].taskName === gettaskName) {\r\n          this.itemSeleted = editName;\r\n          data.columns[i].taskName = editName;\r\n          console.log(\"This is now : \"+data.columns[i])\r\n          // this.desc.push\r\n          // const col = new Column(this.onClickTaskColid, this.itemFromColumn, this.descdata.columns[i])\r\n          this.crudBackend.editTask(editName, this.onClickTaskColid);\r\n        }\r\n       \r\n      }\r\n     \r\n    \r\n    })\r\n    \r\n  }\r\n  toggleModalClose(){\r\n    this.isModalActive = !this.isModalActive;\r\n  }\r\n  ondeleteTask(taskId, colId, item, getColumnName){\r\n    for(var i = this.column.length - 1; i >= 0; i--) {\r\n      if(this.column[i].name === getColumnName) {\r\n        for(var a = this.column[i].columns.length -1; a>=0; a--){\r\n          if(this.column[i].columns[a].taskName === item){\r\n            this.column[i].columns.splice(a, 1);\r\n          }\r\n        }\r\n      }\r\n  }\r\n  this.crudBackend.deleteTask(taskId, colId, item);\r\n  }\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    console.log(event.container.data, event.previousIndex, event.currentIndex)\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n      \r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n    }\r\n  }\r\n\r\n  makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toString();\r\n  }\r\n}\r\n","<div class=\"root\">\r\n\r\n    <div class=\"navbar has-background-dark\">\r\n        <div class=\"navbar-brand\">\r\n            <div class=\"navbar-item\">\r\n                <h1 class=\"app-name has-gradient-text\">KANBAN</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"board\">\r\n        <div class=\"board-bar\">\r\n            <div class=\"board-name\">Welcome\r\n                <div class=\"buttons are-small\">\r\n                 <button class=\"button is-primary is-inverted is-outlined is-light\" (click)=\"onCreateNewColumn()\"><i class=\"fa fa-plus\"></i>&nbsp;Create New Column</button>\r\n                 <div *ngIf=\"voiceActiveSectionDisabled; else voicesection;\">\r\n                    <button type=\"button\" class=\"button is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionColumn()\"><i class=\"fa fa-microphone\"></i></button>\r\n                  </div>\r\n                  &nbsp;\r\n                  <button class=\"button is-danger is-inverted is-outlined is-light\" (click)=\"onClearEveryThing()\"><i class=\"fa fa-times\"></i>&nbsp;Start-Fresh</button>\r\n                  <ng-template #voicesection>\r\n                    <ng-container *ngIf=\"!voiceActiveSectionError; else failure\">\r\n                      <ng-container *ngIf=\"voiceText; else start\">\r\n                        <span>{{voiceText}}</span>\r\n                      </ng-container>\r\n                      <ng-template #start>\r\n                        <ng-container *ngIf=\"voiceActiveSectionListening; else beginning\">\r\n                          <span>Listening…</span>\r\n                        </ng-container>\r\n                        <ng-template #beginning>\r\n                          <span>Start talking…</span>\r\n                        </ng-template>\r\n                      </ng-template>\r\n                    </ng-container>\r\n                    <ng-template #failure>\r\n                      <span>Didn’t catch that</span>\r\n                    </ng-template>\r\n                    <div>\r\n                      <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"closeVoiceRecognition()\"><i class=\"fa fa-times\"></i></button>\r\n                      <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionColumn()\"><i class=\"fa fa-microphone\"></i> &nbsp;Restart</button>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n        <div class=\"board-wrapper\">\r\n            <div class=\"board-columns\" cdkDropListGroup>\r\n                <div class=\"board-column\" *ngFor=\"let col of column\">\r\n                    <div class=\"column-title\">\r\n                        {{col.name}}\r\n                        <br/>\r\n                        <button class=\"button is-small is-link is-inverted is-outlined is-light\" (click)=\"onCreateNewTask(col._id,col.name)\"><i class=\"fa fa-plus\"></i></button>\r\n                        <!-- <div *ngIf=\"voiceActiveSectionTasksDisabled; else voices;\">\r\n                          <button type=\"button\" class=\"button is-small is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionTask(col._id,col.name)\"><i class=\"fa fa-microphone\"></i></button>\r\n                        </div> -->\r\n                        <ng-template #voices>\r\n                          <ng-container *ngIf=\"!voiceActiveSectionTasksError; else failures\">\r\n                            <ng-container *ngIf=\"voiceTextTask; else starts\">\r\n                              <span>{{voiceTextTask}}</span>\r\n                            </ng-container>\r\n                            <ng-template #starts>\r\n                              <ng-container *ngIf=\"voiceActiveSectionTasksListening; else beginnings\">\r\n                                <span>Listening…</span>\r\n                              </ng-container>\r\n                              <ng-template #beginnings>\r\n                                <span>Start talking…</span>\r\n                              </ng-template>\r\n                            </ng-template>\r\n                          </ng-container>\r\n                          <ng-template #failures>\r\n                            <span>Didn’t catch that</span>\r\n                          </ng-template>\r\n                          <div>\r\n                            <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"closeVoiceRecognition()\"><i class=\"fa fa-times\"></i></button>\r\n                            <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionTask(col._id, col.name)\"><i class=\"fa fa-microphone\"></i> &nbsp;Restart</button>\r\n                          </div>\r\n                        </ng-template>\r\n                        &nbsp;<button class=\"button is-small is-danger is-inverted is-outlined is-light\" (click)=\"onDeleteColumn(col._id, col.name, col.columns)\"><i class=\"fa fa-trash\"></i></button>\r\n                    </div>\r\n                    <div class=\"tasks-container\" cdkDropList #todoList=\"cdkDropList\" [cdkDropListData]=\"col.columns\" (cdkDropListDropped)=\"drop($event)\">\r\n                        <div class=\"task\" (click)=\"toggleModal(col._id, item.taskName, col.name)\" *ngFor=\"let item of col.columns\"  cdkDrag>\r\n                          <p> {{item.taskName}}</p> \r\n                            <!-- <button class=\"button is-small is-danger is-light\" (click)=\"ondeleteTask(item._id, col._id, item.taskName,col.name)\"><i class=\"fa fa-trash\"></i></button> -->\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    \r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"modal\" [ngClass]=\"{ 'is-active' : isModalActive }\" *ngIf=\"itemSeleted\">\r\n    <div class=\"modal-background\"></div>\r\n    <form #description=\"ngForm\" (ngSubmit)=\"descriptionMethod(description,itemSeleted)\">\r\n    <div class=\"modal-card\">\r\n      <header class=\"modal-card-head\" >\r\n        <p class=\"modal-card-title\">{{itemSeleted}}</p>\r\n       \r\n        <button class=\"delete\" aria-label=\"close\" (click)=\"toggleModalClose()\"></button>\r\n      </header>\r\n      <section class=\"modal-card-body\">\r\n        <button class=\"button is-small is-rounded is-dark\" (click)=\"editTaskName(itemSeleted)\"><i class=\"fa fa-edit\"></i>&nbsp; Edit Task Name</button>&nbsp;\r\n        <button class=\"button is-small is-rounded is-danger\" (click)=\"editTaskName(itemSeleted)\"><i class=\"fa fa-times\"></i>&nbsp; Delete Task</button>&nbsp;\r\n        <button class=\"button is-small is-rounded is-info\" (click)=\"editTaskName(itemSeleted)\"><i class=\"fa fa-microphone\"></i>&nbsp; Speech to text description</button>&nbsp;\r\n        <br/>\r\n        <textarea ngModel #desc=\"ngModel\" type=\"email\" name=\"desc\" class=\"textarea form-control\" placeholder=\"Your description\" ></textarea>\r\n          \r\n        <!-- <h5>History</h5>\r\n        <article class=\"message\">\r\n            <div class=\"message-body\">\r\n              <p>card was created on this date</p>\r\n            </div>\r\n          </article> -->\r\n      </section>\r\n      <footer class=\"modal-card-foot\">\r\n        <button type=\"submit\" class=\"button is-success\" >Save changes</button>\r\n        <button class=\"button\" (click)=\"toggleModalClose()\">Cancel</button>\r\n      </footer>\r\n    </div>\r\n     </form>\r\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}