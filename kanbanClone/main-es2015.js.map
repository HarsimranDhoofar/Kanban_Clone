{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/crud-backend.service.ts","./src/app/models/column.model.ts","./src/app/models/description.model.ts","./src/app/pages/main-view/main-view.component.ts","./src/app/pages/main-view/main-view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainViewComponent } from './pages/main-view/main-view.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'', component:MainViewComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'kanbanClone';\r\n}\r\n","<router-outlet>\r\n\r\n</router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainViewComponent } from './pages/main-view/main-view.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainViewComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    DragDropModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, ɵCompiler_compileModuleSync__POST_R3__ } from '@angular/core';\r\nimport{HttpClient} from \"@angular/common/http\";\r\nimport { HttpClientModule } from '@angular/common/http'; \r\nimport{map} from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { Column } from './models/column.model';\r\nimport { Description } from './models/description.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudBackendService {\r\n  \r\n  private boardUpdated = new Subject<Column[]>();\r\n  boards: Array<Column> =[];\r\n  history: Array<any>  =[];\r\n  columnUpdateTask: Column = new Column(\"\",\"\",[]);\r\n  constructor(private http: HttpClient) { }\r\n  \r\n\r\nnewColumn(col: Column){\r\nthis.http.post<{message:string, postId:string}>('http://localhost:3000/api/boards',col).subscribe((responseData)=>{\r\n        console.log(responseData.message);\r\n  });\r\nthis.boards.push(col);\r\n}\r\n\r\ndeleteColumn(_id: any) {\r\n  this.http.delete<{message:string}>(\"http://localhost:3000/api/boards/\" + _id).subscribe((responseData)=>{\r\n      console.log(responseData.message);\r\n    });\r\n    \r\n}\r\n\r\nnewTask(col: Column) {\r\n        this.http.put<{message:string, postId:string}>('http://localhost:3000/api/boards',col)\r\n             .subscribe((responseData)=>{\r\n            console.log(responseData.message);\r\n\r\n});\r\n}\r\neditTask(taskNameToBeUpdated: any, colIdUserClickedOn: any) {\r\n  console.log(taskNameToBeUpdated);\r\n  \r\n  this.http.delete('http://localhost:3000/api/boards/edit/' + colIdUserClickedOn/taskNameToBeUpdated)\r\n  .subscribe((responseData)=>{\r\n    \r\n  });\r\n}\r\nclearEveryThing() {\r\n  this.http.delete<{message:string}>(\"http://localhost:3000/api/boards/clearEveryThing/All/E\").subscribe((responseData)=>{\r\n    console.log(responseData.message);\r\n  })\r\n}\r\ndeleteTask(taskId: any, colId: any, item:any) {\r\n  this.http.delete<{message:string}>(\"http://localhost:3000/api/boards/\" + colId +\"/\"+item).subscribe((responseData)=>{\r\n    console.log(responseData.message);\r\n  });\r\n}\r\n\r\ngetBoard(){\r\n  return this.http.get<{message:string, boards:any}>('http://localhost:3000/api/boards');\r\n}\r\n\r\n\r\n\r\ngetBoardUpdateListener(){\r\n  return this.boardUpdated.asObservable();\r\n  }\r\n\r\n}\r\n","import { Description } from './description.model';\r\n\r\nexport class Column{\r\n    constructor(public _id: string, public name:string, public columns:Description[]){}\r\n}","export class Description{\r\n    constructor(public _id: string, public taskName:string , public desc:string, public history:string[]){}\r\n}","import { Component, OnInit, NgZone} from '@angular/core';\r\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport { Column } from 'src/app/models/column.model';\r\nimport { Description } from 'src/app/models/description.model';\r\nimport{ CrudBackendService } from '../../crud-backend.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\ndeclare const annyang: any;\r\n@Component({\r\n  selector: 'app-main-view',\r\n  templateUrl: './main-view.component.html',\r\n  styleUrls: ['./main-view.component.scss'],\r\n})\r\nexport class MainViewComponent implements OnInit {\r\n  \r\n  voiceActiveSectionDisabled: boolean = true;\r\n  voiceActiveSectionDisabledTask: boolean = true;\r\n  voiceActiveSectionError: boolean = false;\r\n  voiceActiveSectionSuccess: boolean = false;\r\n  voiceActiveSectionListening: boolean = false;\r\n  voiceActiveSectionTasksDisabled: boolean = true;\r\n  voiceActiveSectionTasksDisabledTask: boolean = true;\r\n  voiceActiveSectionTasksError: boolean = false;\r\n  voiceActiveSectionTasksSuccess: boolean = false;\r\n  voiceActiveSectionTasksListening: boolean = false;\r\n  voiceText: string;\r\n  voiceTextTask: string;\r\n  isModalActive: boolean = false;\r\n  itemSeleted: String =\"\";\r\n  itemFromColumn: any;\r\n  column:Column[]=[];\r\n  history:string[]=[];\r\n  boardSub: Subscription\r\n  value: String;\r\n  message = '';\r\n  onClickTaskColid: any;\r\n  onClickTaskItem: any;\r\n  col: any;\r\n  desc: Array<Description> =[];\r\n  constructor(public crudBackend: CrudBackendService, private ngZone: NgZone) { }\r\n\r\n  initializeVoiceRecognitionCallback(): void {\r\n    annyang.addCallback('error', (err) => {\r\n      if(err.error === 'network'){\r\n        this.voiceText = \"Internet is require\";\r\n        annyang.abort();\r\n        this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\r\n      } else if (this.voiceText === undefined) {\r\n        this.ngZone.run(() => this.voiceActiveSectionError = true);\r\n        annyang.abort();\r\n      }\r\n    });\r\n   annyang.addCallback('soundstart', (res) => {\r\n    this.ngZone.run(() => this.voiceActiveSectionListening = true);\r\n   });\r\n   annyang.addCallback('end', () => {\r\n     if (this.voiceText === undefined) {\r\n       this.ngZone.run(() => this.voiceActiveSectionError = true);\r\n       annyang.abort();\r\n     }\r\n   });\r\n   annyang.addCallback('result', (userSaid) => {\r\n     this.ngZone.run(() => this.voiceActiveSectionError = false);\r\n     let queryText: any = userSaid[0];\r\n     annyang.abort();\r\n     this.voiceText = queryText;\r\n     this.ngZone.run(() => this.voiceActiveSectionListening = false);\r\n     this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\r\n     if(this.voiceText !=null && this.voiceText !=\"\"){\r\n      this.onCreateNewColumnVoice();\r\n      annyang.abort();\r\n     }\r\n     this.closeVoiceRecognition()\r\n   });\r\n   \r\n }\r\n startVoiceRecognitionColumn(): void {\r\n   this.voiceActiveSectionDisabled = false;\r\n   this.voiceActiveSectionError = false;\r\n   this.voiceActiveSectionSuccess = false;\r\n   this.voiceText = undefined;\r\n   if (annyang) {\r\n     let commands = {\r\n       'demo-annyang': () => { }\r\n     };\r\n     annyang.addCommands(commands);\r\n    \r\n     this.initializeVoiceRecognitionCallback();\r\n     annyang.start({ autoRestart: false });\r\n     \r\n   }\r\n }\r\n startVoiceRecognitionTask(id:any, getColumnName: any){\r\n  this.voiceActiveSectionTasksDisabled = false;\r\n  this.voiceActiveSectionTasksError = false;\r\n  this.voiceActiveSectionTasksSuccess = false;\r\n  this.voiceTextTask = undefined;\r\n  if (annyang) {\r\n    let commands = {\r\n      'demo-annyang': () => { }\r\n    };\r\n    annyang.addCommands(commands);\r\n   \r\n    this.initializeVoiceRecognitionCallbackTask(id, getColumnName);\r\n    annyang.start({ autoRestart: false });\r\n    \r\n  }\r\n }\r\n initializeVoiceRecognitionCallbackTask(id: any, getColumnName: any): void {\r\n  annyang.addCallback('error', (err) => {\r\n    if(err.error === 'network'){\r\n      this.voiceTextTask = \"Internet is require\";\r\n      annyang.abort();\r\n      this.ngZone.run(() => this.voiceActiveSectionTasksSuccess = true);\r\n    } else if (this.voiceTextTask === undefined) {\r\n      this.ngZone.run(() => this.voiceActiveSectionTasksError = true);\r\n      annyang.abort();\r\n    }\r\n  });\r\n annyang.addCallback('soundstart', (res) => {\r\n  this.ngZone.run(() => this.voiceActiveSectionTasksListening = true);\r\n });\r\n annyang.addCallback('end', () => {\r\n   if (this.voiceTextTask === undefined) {\r\n     this.ngZone.run(() => this.voiceActiveSectionTasksError = true);\r\n     annyang.abort();\r\n   }\r\n });\r\n annyang.addCallback('result', (userSaid) => {\r\n   this.ngZone.run(() => this.voiceActiveSectionTasksError = false);\r\n   let queryText: any = userSaid[0];\r\n   annyang.abort();\r\n   this.voiceTextTask = queryText;\r\n   this.ngZone.run(() => this.voiceActiveSectionTasksListening = false);\r\n   this.ngZone.run(() => this.voiceActiveSectionTasksSuccess = true);\r\n   if(this.voiceText !=null && this.voiceText !=\"\"){\r\n    this.onCreateNewTaskVoice(id, getColumnName, this.voiceTextTask);\r\n    annyang.abort();\r\n   }\r\n   this.closeVoiceRecognition()\r\n });\r\n \r\n}\r\n closeVoiceRecognition(): void {\r\n   this.voiceActiveSectionDisabled = true;\r\n   this.voiceActiveSectionError = false;\r\n   this.voiceActiveSectionSuccess = false;\r\n   this.voiceActiveSectionListening = false;\r\n   this.voiceText = undefined;\r\n   if(annyang){\r\n    annyang.abort();\r\n   }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getBoardData();\r\n  }\r\n  getBoardData(){\r\n    this.crudBackend.getBoard().subscribe((data)=>{\r\n      const col = data[\"boards\"]\r\n      for(let i =0; i<=Object.keys(col).length -1; i++){\r\n        const len = col[i]\r\n        const _id = len['_id'];\r\n        const columnName = len['name'];\r\n        const taskLength = len['columns'];\r\n        const description:Array<Description> =[];\r\n        for(let a=0; a<=Object.keys(taskLength).length -1; a++){\r\n           const leng = taskLength[a];\r\n           const taskId = leng['_id'];\r\n           const desc = leng['desc'];\r\n           const history = leng['history'];\r\n           const taskName = leng['taskName'];\r\n           if(taskName != null && taskName !=\"\"){\r\n            description.push(new Description(taskId,taskName, desc, history))\r\n           }\r\n           \r\n        }\r\n        this.column.push(new Column(_id, columnName, description));\r\n\r\n      } \r\n  \r\n      \r\n    });\r\n    \r\n  }\r\n  onCreateNewColumn(){\r\n    var columnName = prompt(\"Please enter the name of the column\", \"New Column\");\r\n    if(columnName != null && columnName !=\"\"){\r\n      var col = new Column(this.makeid(9),columnName, [])\r\n      this.column.push(col);\r\n      this.crudBackend.newColumn(col);\r\n    }\r\n    else{\r\n      alert(\"Column name can not be empty\");\r\n    }\r\n    \r\n    \r\n  }\r\n  onCreateNewColumnVoice(){\r\n    var col = new Column(this.makeid(9),this.voiceText, [])\r\n    this.column.push(col);\r\n    this.crudBackend.newColumn(col);\r\n    \r\n  }\r\n  onCreateNewTask(id:any, getColumnName: any){\r\n\r\n    var taskname = prompt(\"Please enter the name of the task\", \"New Task\");\r\n    if(taskname !=null && taskname !=\"\"){\r\n    this.column.find((data)=>{\r\n      this.history.push(\"New Task Created on: \"+ Date.now())\r\n      data.columns.push(new Description(this.makeid(9),taskname,\"\", this.history));\r\n        if(data.name != getColumnName){\r\n            data.columns.pop();\r\n      }\r\n      const col = new Column(id, getColumnName, data.columns);\r\n      this.crudBackend.newTask(col);\r\n      })\r\n    }\r\n  }\r\n  onCreateNewTaskVoice(id:any, getColumnName: any, voiceTaskName:any){\r\n\r\n    if(voiceTaskName !=null && voiceTaskName !=\"\"){\r\n    this.column.find((data)=>{\r\n      this.history.push(\"New Task Created on: \"+ Date.now())\r\n      data.columns.push(new Description(this.makeid(9),voiceTaskName,\"\", this.history));\r\n        if(data.name != getColumnName){\r\n            data.columns.pop();\r\n      }\r\n      const col = new Column(id, getColumnName, data.columns);\r\n      this.crudBackend.newTask(col);\r\n      })\r\n    }\r\n  }\r\n  onDeleteColumn(id:any, getColumnName:any, getTasks:any){\r\n    const conf = confirm('Are you sure you want to delete this column?');\r\n    if(conf == true){\r\n    for(var i = this.column.length - 1; i >= 0; i--) {\r\n      if(this.column[i].name === getColumnName) {\r\n        this.column.splice(i, 1);\r\n      }\r\n  }\r\n    this.crudBackend.deleteColumn(id);\r\n}\r\n  }\r\n  onEditBoardName(){\r\n     var getBoardName = prompt(\"Please enter the board Name\", \"New Board\");\r\n      \r\n  }\r\n  descriptionMethod(description,gettaskName){\r\n    this.column.find((data)=>{\r\n      for(var i = data.columns.length - 1; i >= 0; i--) {\r\n        if(data.columns[i].taskName === gettaskName) {\r\n          data.columns[i].desc = description;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  toggleModal(id, items, getColumnName) {\r\n    console.log(items);\r\n   this.onClickTaskColid =id;\r\n   this.onClickTaskItem = items;\r\n   \r\n    console.log(this.itemSeleted);\r\n    this.itemSeleted = items;\r\n    this.itemFromColumn = getColumnName;\r\n    this.isModalActive = !this.isModalActive;\r\n   \r\n  }\r\n  onClearEveryThing(){\r\n    const conf = confirm('Are you sure you want to delete everything and start fresh?');\r\n    if(conf == true){\r\n    this.column = [];\r\n    this.crudBackend.clearEveryThing();\r\n    }\r\n  }\r\n  editTaskName(gettaskName: any){\r\n    console.log(this.onClickTaskColid)\r\n    console.log(this.onClickTaskItem)\r\n    var editName = prompt(\"Please enter the new taskName\", \"New Task Name\");\r\n    this.column.find((data)=>{\r\n      for(var i = data.columns.length - 1; i >= 0; i--) {\r\n        if(data.columns[i].taskName === gettaskName) {\r\n          this.itemSeleted = editName;\r\n          data.columns[i].taskName = editName;\r\n          console.log(\"This is now : \"+data.columns[i])\r\n          // this.desc.push\r\n          // const col = new Column(this.onClickTaskColid, this.itemFromColumn, this.descdata.columns[i])\r\n          this.crudBackend.editTask(editName, this.onClickTaskColid);\r\n        }\r\n       \r\n      }\r\n     \r\n    \r\n    })\r\n    \r\n  }\r\n  toggleModalClose(){\r\n    this.isModalActive = !this.isModalActive;\r\n  }\r\n  ondeleteTask(taskId, colId, item, getColumnName){\r\n    for(var i = this.column.length - 1; i >= 0; i--) {\r\n      if(this.column[i].name === getColumnName) {\r\n        for(var a = this.column[i].columns.length -1; a>=0; a--){\r\n          if(this.column[i].columns[a].taskName === item){\r\n            this.column[i].columns.splice(a, 1);\r\n          }\r\n        }\r\n      }\r\n  }\r\n  this.crudBackend.deleteTask(taskId, colId, item);\r\n  }\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    console.log(event.container.data, event.previousIndex, event.currentIndex)\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n      \r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n                        event.container.data,\r\n                        event.previousIndex,\r\n                        event.currentIndex);\r\n    }\r\n  }\r\n\r\n  makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toString();\r\n  }\r\n}\r\n","<div class=\"root\">\r\n\r\n    <div class=\"navbar has-background-dark\">\r\n        <div class=\"navbar-brand\">\r\n            <div class=\"navbar-item\">\r\n                <h1 class=\"app-name has-gradient-text\">KANBAN</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"board\">\r\n        <div class=\"board-bar\">\r\n            <div class=\"board-name\">Welcome\r\n                <div class=\"buttons are-small\">\r\n                 <button class=\"button is-primary is-inverted is-outlined is-light\" (click)=\"onCreateNewColumn()\"><i class=\"fa fa-plus\"></i>&nbsp;Create New Column</button>\r\n                 <div *ngIf=\"voiceActiveSectionDisabled; else voicesection;\">\r\n                    <button type=\"button\" class=\"button is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionColumn()\"><i class=\"fa fa-microphone\"></i></button>\r\n                  </div>\r\n                  &nbsp;\r\n                  <button class=\"button is-danger is-inverted is-outlined is-light\" (click)=\"onClearEveryThing()\"><i class=\"fa fa-times\"></i>&nbsp;Start-Fresh</button>\r\n                  <ng-template #voicesection>\r\n                    <ng-container *ngIf=\"!voiceActiveSectionError; else failure\">\r\n                      <ng-container *ngIf=\"voiceText; else start\">\r\n                        <span>{{voiceText}}</span>\r\n                      </ng-container>\r\n                      <ng-template #start>\r\n                        <ng-container *ngIf=\"voiceActiveSectionListening; else beginning\">\r\n                          <span>Listening…</span>\r\n                        </ng-container>\r\n                        <ng-template #beginning>\r\n                          <span>Start talking…</span>\r\n                        </ng-template>\r\n                      </ng-template>\r\n                    </ng-container>\r\n                    <ng-template #failure>\r\n                      <span>Didn’t catch that</span>\r\n                    </ng-template>\r\n                    <div>\r\n                      <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"closeVoiceRecognition()\"><i class=\"fa fa-times\"></i></button>\r\n                      <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionColumn()\"><i class=\"fa fa-microphone\"></i> &nbsp;Restart</button>\r\n                    </div>\r\n                  </ng-template>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n        <div class=\"board-wrapper\">\r\n            <div class=\"board-columns\" cdkDropListGroup>\r\n                <div class=\"board-column\" *ngFor=\"let col of column\">\r\n                    <div class=\"column-title\">\r\n                        {{col.name}}\r\n                        <br/>\r\n                        <button class=\"button is-small is-link is-inverted is-outlined is-light\" (click)=\"onCreateNewTask(col._id,col.name)\"><i class=\"fa fa-plus\"></i></button>\r\n                        <!-- <div *ngIf=\"voiceActiveSectionTasksDisabled; else voices;\">\r\n                          <button type=\"button\" class=\"button is-small is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionTask(col._id,col.name)\"><i class=\"fa fa-microphone\"></i></button>\r\n                        </div> -->\r\n                        <ng-template #voices>\r\n                          <ng-container *ngIf=\"!voiceActiveSectionTasksError; else failures\">\r\n                            <ng-container *ngIf=\"voiceTextTask; else starts\">\r\n                              <span>{{voiceTextTask}}</span>\r\n                            </ng-container>\r\n                            <ng-template #starts>\r\n                              <ng-container *ngIf=\"voiceActiveSectionTasksListening; else beginnings\">\r\n                                <span>Listening…</span>\r\n                              </ng-container>\r\n                              <ng-template #beginnings>\r\n                                <span>Start talking…</span>\r\n                              </ng-template>\r\n                            </ng-template>\r\n                          </ng-container>\r\n                          <ng-template #failures>\r\n                            <span>Didn’t catch that</span>\r\n                          </ng-template>\r\n                          <div>\r\n                            <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"closeVoiceRecognition()\"><i class=\"fa fa-times\"></i></button>\r\n                            <button class=\"button is-link is-inverted is-outlined is-light\" (click)=\"startVoiceRecognitionTask(col._id, col.name)\"><i class=\"fa fa-microphone\"></i> &nbsp;Restart</button>\r\n                          </div>\r\n                        </ng-template>\r\n                        &nbsp;<button class=\"button is-small is-danger is-inverted is-outlined is-light\" (click)=\"onDeleteColumn(col._id, col.name, col.columns)\"><i class=\"fa fa-trash\"></i></button>\r\n                    </div>\r\n                    <div class=\"tasks-container\" cdkDropList #todoList=\"cdkDropList\" [cdkDropListData]=\"col.columns\" (cdkDropListDropped)=\"drop($event)\">\r\n                        <div class=\"task\" (click)=\"toggleModal(col._id, item.taskName, col.name)\" *ngFor=\"let item of col.columns\"  cdkDrag>\r\n                          <p> {{item.taskName}}</p> \r\n                            <!-- <button class=\"button is-small is-danger is-light\" (click)=\"ondeleteTask(item._id, col._id, item.taskName,col.name)\"><i class=\"fa fa-trash\"></i></button> -->\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    \r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"modal\" [ngClass]=\"{ 'is-active' : isModalActive }\" *ngIf=\"itemSeleted\">\r\n    <div class=\"modal-background\"></div>\r\n    <form #description=\"ngForm\" (ngSubmit)=\"descriptionMethod(description,itemSeleted)\">\r\n    <div class=\"modal-card\">\r\n      <header class=\"modal-card-head\" >\r\n        <p class=\"modal-card-title\">{{itemSeleted}}</p>\r\n       \r\n        <button class=\"delete\" aria-label=\"close\" (click)=\"toggleModalClose()\"></button>\r\n      </header>\r\n      <section class=\"modal-card-body\">\r\n        <button class=\"button is-small is-rounded is-dark\" (click)=\"editTaskName(itemSeleted)\"><i class=\"fa fa-edit\"></i>&nbsp; Edit Task Name</button>&nbsp;\r\n        <button class=\"button is-small is-rounded is-danger\" (click)=\"editTaskName(itemSeleted)\"><i class=\"fa fa-times\"></i>&nbsp; Delete Task</button>&nbsp;\r\n        <button class=\"button is-small is-rounded is-info\" (click)=\"editTaskName(itemSeleted)\"><i class=\"fa fa-microphone\"></i>&nbsp; Speech to text description</button>&nbsp;\r\n        <br/>\r\n        <textarea ngModel #desc=\"ngModel\" type=\"email\" name=\"desc\" class=\"textarea form-control\" placeholder=\"Your description\" ></textarea>\r\n          \r\n        <!-- <h5>History</h5>\r\n        <article class=\"message\">\r\n            <div class=\"message-body\">\r\n              <p>card was created on this date</p>\r\n            </div>\r\n          </article> -->\r\n      </section>\r\n      <footer class=\"modal-card-foot\">\r\n        <button type=\"submit\" class=\"button is-success\" >Save changes</button>\r\n        <button class=\"button\" (click)=\"toggleModalClose()\">Cancel</button>\r\n      </footer>\r\n    </div>\r\n     </form>\r\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}